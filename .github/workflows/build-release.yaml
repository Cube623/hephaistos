name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag"
        required: true

env:
  name: hephaistos
  data: hephaistos-data
  changelog: CHANGELOG.md
  config: hephaistos/config.py
  artifacts-content-type: application/zip

jobs:
  tag-and-release:
    name: Rotate changelog, tag, and create release
    runs-on: ubuntu-latest
    env:
      release-notes: release-notes.md
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Checkout files
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      - name: Set up Python
        uses: actions/setup-python@dc73133d4da04e56a135ae2246682783cc7c7cb6
        with:
          python-version: 3.9

      - name: Build release notes
        env:
          prog: |
            from pathlib import Path
            import re
            regex = re.compile(r'## \[Unreleased\]\s+(?P<notes>.*?)\s+## ', re.DOTALL)
            changelog = Path('${{ env.changelog }}').read_text()
            found = regex.search(changelog)
            if found:
              print(found.group('notes'))
        run: |
          python -c "${{ env.prog }}" > ${{ env.release-notes }}

      - name: Rotate unreleased section in changelog
        uses: thomaseizinger/keep-a-changelog-new-release@9f6c16b8af7dd10f8aa0ad740fd648b2cfe22171
        with:
          version: ${{ github.event.inputs.tag }}

      - name: Rotate version in config.py
        run: |
          sed -i "s/VERSION = '.*'/VERSION = '${{ github.event.inputs.tag }}'/" ${{ env.config }}

      - name: Push updated changelog and config to repository
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add ${{ env.changelog }} ${{ env.config }}
          git commit --message "Release ${{ github.event.inputs.tag }}"
          git push origin HEAD:main

      - name: Tag
        run: |
          git tag ${{ github.event.inputs.tag }}
          git push origin --tags

      - name: Create release
        id: release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e
        with:
          release_name: ${{ github.event.inputs.tag }}
          tag_name: ${{ github.event.inputs.tag }}
          body_path: ${{ env.release-notes }}
          commitish: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-upload-artifacts:
    name: Build and upload artifacts
    needs: tag-and-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            pip-cache-path: ~\AppData\Local\pip\Cache
            artifacts: hephaistos-windows.zip
            artifacts-python: hephaistos-python.zip
          - os: macos-latest
            pip-cache-path: ~/Library/Caches/pip
            artifacts: hephaistos-macos.zip
          - os: ubuntu-latest
            pip-cache-path: ~/.cache/pip
            artifacts: hephaistos-linux.zip

    steps:
      - name: Checkout files
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
        with:
          submodules: true

      - name: Consolidate Python artifacts in a zip
        if: matrix.os == 'windows-latest'
        run: Compress-Archive ${{ env.name }},${{ env.data }},sjson ${{ matrix.artifacts-python }}

      - name: Upload artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
        with:
          upload_url: ${{ needs.tag-and-release.outputs.upload_url }}
          asset_path: ${{ matrix.artifacts-python }}
          asset_name: ${{ matrix.artifacts-python }}
          asset_content_type: ${{ env.artifacts-content-type }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@dc73133d4da04e56a135ae2246682783cc7c7cb6
        with:
          python-version: 3.9

      - name: Retrieve pip dependencies from cache
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353
        with:
          path: |
            ${{ env.pythonLocation }}\lib\site-packages
            ${{ matrix.pip-cache-path }}
          key: ${{ runner.os }}-pip-cache

      - name: Install pip dependencies
        run: pip install pyinstaller==4.3

      - name: Build binaries with PyInstaller
        run: python -m PyInstaller --onefile ${{ env.name }}/__main__.py --name ${{ env.name }}

      - name: Consolidate artifacts in a zip
        if: startsWith(runner.os, 'Windows')
        run: Compress-Archive dist/${{ env.name }}.exe,${{ env.data }} ${{ matrix.artifacts }}

      - name: Consolidate artifacts in a zip
        if: startsWith(runner.os, 'macOS') || startsWith(runner.os, 'Linux')
        run: |
          mv ${{ env.name }} ${{ env.name }}-dir
          mv dist/${{ env.name }} .
          zip ${{ matrix.artifacts }} -r ${{ env.name }} ${{ env.data }}

      - name: Upload artifacts
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
        with:
          upload_url: ${{ needs.tag-and-release.outputs.upload_url }}
          asset_path: ${{ matrix.artifacts }}
          asset_name: ${{ matrix.artifacts }}
          asset_content_type: ${{ env.artifacts-content-type }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
